name: Deploy to AWS

on:
  push:
    branches:
      - main
      - sandbox
      - test

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY_API: green-detective-api
  ECR_REPOSITORY_PROCESS: green-detective-process
  ECS_CLUSTER: green-detective
  ECS_SERVICE_API: green-detective-api
  ECS_SERVICE_PROCESS: green-detective-process

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ vars.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag API image
        run: |
          docker build --target service-api -t ${{ env.ECR_REPOSITORY_API }}:${{ github.sha }} .
          docker tag ${{ env.ECR_REPOSITORY_API }}:${{ github.sha }} ${{ env.ECR_REPOSITORY_API }}:latest

      - name: Build and tag Process image
        run: |
          docker build --target service-process -t ${{ env.ECR_REPOSITORY_PROCESS }}:${{ github.sha }} .
          docker tag ${{ env.ECR_REPOSITORY_PROCESS }}:${{ github.sha }} ${{ env.ECR_REPOSITORY_PROCESS }}:latest

      - name: Push API image to ECR
        run: |
          docker push ${{ env.ECR_REPOSITORY_API }}:${{ github.sha }}
          docker push ${{ env.ECR_REPOSITORY_API }}:latest

      - name: Push Process image to ECR
        run: |
          docker push ${{ env.ECR_REPOSITORY_PROCESS }}:${{ github.sha }}
          docker push ${{ env.ECR_REPOSITORY_PROCESS }}:latest

  terraform-apply:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ vars.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="db_password=${{ vars.DB_PASSWORD }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="db_password=${{ vars.DB_PASSWORD }}"
